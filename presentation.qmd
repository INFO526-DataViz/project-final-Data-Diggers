---
title: "Visualizing Space"
subtitle: "An Interactive Spatio-Temporal Visualization of Meteorites Discoveries"
author: "Data Dynamos - Deema, Rahul, Swati, Ansh & Shakir"

title-slide-attributes:
  data-background-image: images/slide_background.jpg
  data-background-size: stretch
  data-background-opacity: "0.7"
  data-slide-number: none

format:
  revealjs: 
    theme:  ['data/customtheming.scss']
    transition: slide
    background-transition: fade
    footer: "[⚙ Data Dynamos](https://info526-dataviz.github.io/project-final-Data-Dynamos/)"
    scrollable: true
    
editor: visual
execute:
  echo: false
---

```{r setup, echo=FALSE, warning=FALSE, error=FALSE, message=FALSE, results='hide'}
#| code-fold: true
#| code-summary: "Installed Packages"


# GETTING THE LIBRARIES
if (!require("pacman"))
  install.packages("pacman")

pacman::p_load(tidyverse,
               here,
               ggpubr,
               janitor,
               colorspace,
               magick,
               hexbin,
               dplyr,
               sf,
               leaflet,
               ggplot2,
               janitor,
               rnaturalearth,
               rworldmap,
               dlookr,
               IRdisplay,
               ggmap,
               shiny,
               shinydashboard
)

theme_set(theme_minimal(base_size = 11))

# setting theme for ggplot2
ggplot2::theme_set(ggplot2::theme_minimal(base_size = 14))

# setting width of code output
options(width = 70)

# setting figure parameters for knitr
knitr::opts_chunk$set(
  fig.width = 12,        # 7" width
  fig.asp = 0.618,      # the golden ratio
  fig.retina = 4,       # dpi multiplier for displaying HTML output on retina
  fig.align = "center", # center align figures
  dpi = 500             # higher dpi, sharper image
)

```

```{r shiny_app_render_pres, warning=FALSE, message=FALSE}

#install.packages("shinythemes")
library(shinythemes)

# Read meteorite data
meteorite <- read_csv("https://raw.githubusercontent.com/INFO526-DataViz/project-final-Data-Dynamos/main/data/Meteorite_Landings.csv")

# Rename columns using dplyr::rename
meteorite <- na.omit(meteorite) %>%
  clean_names() %>%
  rename(mass = mass_g, class = recclass)

# Selecting columns where mass > 1 gram
meteorite <- subset(meteorite, mass >= 1)

# Drop unnecessary columns
meteorite <- meteorite[, !(names(meteorite) %in% c("nametype", "fall"))]

# Create the 'decade' column
meteorite <- meteorite %>%
  mutate(decade = case_when(
    year < 1950 ~ "Before 1950",
    between(year, 1951, 1960) ~ "Decade 1951-1960",
    between(year, 1961, 1970) ~ "Decade 1961-1970",
    between(year, 1971, 1980) ~ "Decade 1971-1980",
    between(year, 1981, 1990) ~ "Decade 1981-1990",
    between(year, 1991, 2000) ~ "Decade 1991-2000",
    between(year, 2001, 2010) ~ "Decade 2001-2010",
    between(year, 2011, 2020) ~ "Decade 2011-2020",
    TRUE ~ "NA"  # Default case if none of the conditions are met
  ))

# Create a world map
world <- ne_countries(scale = "medium", returnclass = "sf")

# Define UI for the Shiny app
ui <- fluidPage(
  theme = shinytheme("darkly"),
  titlePanel("Meteorite Impact Visualization"),
  sidebarLayout(
    sidebarPanel(
      sliderInput("year_range", "Select Year Range:",
                  min = min(meteorite$year), max = max(meteorite$year),
                  value = c(min(meteorite$year), max(meteorite$year)),
                  step = 1),
      sliderInput("mass_range", "Select Mass Range (g):",
                  min = min(meteorite$mass), max = max(meteorite$mass),
                  value = c(min(meteorite$mass), max(meteorite$mass)),
                  step = 1),
      selectInput("plot_type", "Select Plot Type:",
                  choices = c("Point Plot", "Thermal Density Map", "Bubble Plot"),
                  selected = "Point Plot")
    ),
    mainPanel(
      plotOutput("meteor_map")
    )
  )
)

# Server for Shiny app
server <- function(input, output) {
  # Filter data based on user input
  filtered_data <- reactive({
    meteorite %>%
      filter(year >= input$year_range[1], year <= input$year_range[2],
             mass >= input$mass_range[1], mass <= input$mass_range[2])
  })

  # Function to create Point Plot
  create_point_plot <- function(data) {
    ggplot() +
      geom_sf(data = world, fill = "lightgrey") +
      geom_point(data = data, aes(x = reclong, y = reclat), color = "red", size = 1, alpha = 0.5) +
      labs(title = "World Map: Meteorite Impacts\n",
           x = "Longitude",
           y = "Latitude") +
      theme_minimal() +
      theme(
        plot.title = element_text(size = 14),
        axis.text = element_text(size = 8)
      )
  }

  # Function to create Thermal Density Map
  create_density_map <- function(data) {
    ggplot() +
      geom_sf(data = world, fill = "lightgrey") +
      geom_density_2d(data = data, aes(x = reclong, y = reclat), color = "red") +
      labs(title = "Thermal Map: Meteorite Impacts Density",
           x = "Longitude",
           y = "Latitude") +
      theme_minimal() +
      theme(
        plot.title = element_text(size = 14),
        axis.text = element_text(size = 8)
      )
  }

  # Function to create Bubble Plot
  create_bubble_plot <- function(data) {
    ggplot() +
      geom_sf(data = world, fill = "lightgrey") +
      geom_point(data = data, aes(x = reclong, y = reclat, size = mass), color = "blue", alpha = 0.5) +
      labs(title = "Bubble Map of Meteorite Mass",
           x = "Longitude",
           y = "Latitude") +
      theme_minimal() +
      theme(
        plot.title = element_text(size = 14),
        axis.text = element_text(size = 8)
      ) +
      scale_size_continuous(labels = function(x)
        scales::number_format(scale = 1e-6,
                               suffix = "M (g)")(x) |>
        str_replace_all("\\.", ","))
  }

  # Define the reactive plot
  output$meteor_map <- renderPlot({
    data <- filtered_data()
    plot_type <- input$plot_type

    if (plot_type == "Point Plot") {
      create_point_plot(data)
    } else if (plot_type == "Thermal Density Map") {
      create_density_map(data)
    } else if (plot_type == "Bubble Plot") {
      create_bubble_plot(data)
    }
  })
}

# Run the Shiny app
shinyApp(ui, server)

```

## Introduction: {.smaller}

-   Meteorites are like celestial time capsules, encapsulate the enigmatic history of our solar system.
-   Our initiative introduces an interactive platform sourced from NASA's Meteorite Landings, aiming to unveil the enthralling saga of these cosmic wonders.

## Goal and problem statement: {.smaller}

-   Our Shiny app features three key visualizations---world map, density map, and bubble map---showcasing meteorite landings across regions, offering insights into their distribution, density, and mass significance.

-   The question we will be answering is- "What are the noticeable trends in meteor impact on Earth?"

## Execution of plan: {.smaller}

-   Plotting of individual impact of meteor with various parameters like- mass and year.

-   Integration into an R Shiny application.

-   Revision and building on responsiveness of plot.

## Data Overview: {.smaller}

-   Data source: NASA's Meteorite Landings dataset.
-   Data Scope : Name, Recclass, Mass (g), Fall, Year

```{r slide4, warning=FALSE, message=FALSE}
#| code-fold: true
#| code-summary: "Data Read"

meteorite = read_csv("https://raw.githubusercontent.com/INFO526-DataViz/project-final-Data-Dynamos/main/data/Meteorite_Landings.csv")

diagnose(meteorite)
```

## Data pre-processing: {.smaller}

For our pre-processing, we have done the following:

-   Dropped all the missing values to a get a new row value of 37,417.

-   Filtered for mass greater than 1, as there were lot of values close to 0.

-   Renamed and cleaned names of columns.

# Plots

## Point plot: {.smaller}

1). Which continents appear to have the highest density of meteorite impacts based on the data visualized in the provided plot?

![](images/point.JPG)

## Point plots: {.smaler}

High Impact Density: Europe and North America show a high density of meteorite impacts. Moderate Impact Density: Parts of Asia and Africa display a moderate concentration of impacts. Lower Impact Density: South America and Australia have fewer impacts compared to Europe and North America. Minimal Impact Reporting: Antarctica has the least number of recorded impacts, potentially due to underreporting.

## Density plot: {.smaller}

2). What does the thermal map suggest about the geographical distribution of meteorite impacts across the world?

![](images/density.JPG)

## Density plot: {.smaller}

Concentrated Zones: The map highlights areas with a significant concentration of meteorite impacts through thermal rings. Major Impact Regions: Regions with the densest meteorite activity include parts of North America, Europe, and Asia. Secondary Impact Zones: Lesser concentrations are visible in South America, Africa, and Australia. Oceans and Antarctica: The map shows minimal impact activity in the oceans and Antarctica. Data Interpretation: The thermal rings suggest areas where meteorites are most commonly found or reported. Reporting Bias: The concentration of impacts may be influenced by the ease of meteorite discovery and reporting mechanisms in different regions.

## Bubble plot: {.smaller}

3). How does the mass of meteorites vary across different regions of the world?

![](images/bubble.JPG)

## Bubble plot: {.smaller}

Variation in Mass: The map shows a variation in meteorite mass with some regions exhibiting larger meteorites than others. Larger Meteorites: Regions with notably larger meteorites, as indicated by bigger bubbles, include parts of North America, Europe, and Asia. Smaller Meteorites: Smaller meteorites, represented by smaller bubbles, are widely scattered across all continents. Mass Concentration: There is a concentration of larger meteorite masses in the northern hemisphere. Oceanic Impacts: Fewer large meteorites are noted in the oceans, likely due to the difficulty in discovering them.

## Designing the Shiny App: {.smaller}

User Interactivity Features:

1.  Temporal Analysis

2.  Spatial Distribution

3.  Size and Classification Analysis

## R Shiny application: {.smaller}

Link: <https://rahulbangad.shinyapps.io/app1/>

## Impact and Applications: {.smaller}

-   This visualization serves as an engaging educational tool, aiding astronomy enthusiasts, students, and researchers in understanding meteorite impacts' global distribution, sizes, and densities.
-   Researchers can leverage this visualization to conduct in-depth studies on meteorite falls over time, identifying trends, hotspots, and variations in impact frequencies across different periods and regions.

## Future Enhancements: {.smaller}

Introducing a feature that allows users to access in-depth meteorite details simply by hovering over impact sites on the map. This enhancement will provide immediate access to essential specifics such as meteorite names, formation years, and other crucial attributes, facilitating deeper insights into each meteorite.

## Challenges: {.smaller}

-   Data Limitations: Addressing the challenge of underrepresented areas due to lack of reporting or discovery, especially in remote regions.

-   Technological Barriers: Overcoming technical limitations in handling and processing large datasets with high accuracy.

-   Public Engagement: Ensuring the Shiny app remains user-friendly and engaging for a diverse audience, encouraging public interaction and education.

## Conclusion and Q&A. {.smaller}

-   Global Distribution: The data and visualizations reveal a global distribution of meteorite impacts, with varying densities and masses.

-   Density Concentration: Impact density is higher in populated regions, suggesting better reporting or more extensive discoveries due to human activity.

-   Mass Observations: Larger meteorite masses are found sporadically, with notable occurrences in the Northern Hemisphere, particularly North America, Europe, and Asia. Visualization Effectiveness:

    The Shiny app effectively visualizes complex data, allowing for interactive exploration of meteorite impacts by year and mass.
