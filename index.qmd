---
title: "Visualising the Heavens" 
subtitle: " An Interactive Spatio-Temporal Visualization of Meteorites Discoveries"
author: "Data Dynamos"
format: html
editor: visual
---

## Abstract

Journey into the depths of our solar system and unveil the hidden realm of meteorites, often overlooked as mere space wanderers. These celestial nomads, scattered across the cosmos, hold the keys to unlocking the mysteries of our solar system's origins. In our latest endeavor, we introduce an interactive website dedicated to exploring these fascinating celestial bodies, drawing from discoveries collected by Javier de la Torre.

Astronomy enthusiasts and the wider public alike will find our website to be an educational and immersive tool. Users can explore diverse facets of meteorite discoveries through interactive visualizations, accessing information such as names, IDs, name types, recclass classifications, masses measured in grams, fall occurrences, discovery years, reclat (latitude of the landing site), relong (longitude of the landing site), and exact geolocations. Our project utilizes data from NASA's comprehensive Meteorite Landings dataset, encompassing 34,513 meteorites. These meteorites are an integral part of our cosmic history, offering a window into the profound mysteries of our solar system's evolution. Join us on this celestial odyssey and rediscover the wonders of meteorites.

## Introduction

Meteorites act as cosmic time capsules, preserving the mysteries of our solar system's formation. These celestial travelers have voyaged through space, bearing witness to ancient cosmic events, their rocky surfaces preserving stories of our cosmic past. Scattered across the universe, these wanderers hold untold narratives that illuminate the genesis of our solar system. Our latest venture introduces an interactive online platform, drawn from Javier de la Torre's dataset [Meteorite Landings](https://data.nasa.gov/Space-Science/Meteorite-Landings/gh4g-9sfh/about_data) which is taken from NASA's website, dedicated to unveiling the captivating world of these celestial marvels. Our objective is to present an interactive visualization spotlighting the annual distribution of meteorite falls across diverse global regions.

Our dataset encompasses 34,513 meteorites, offering essential insights including `name` for meteorite identification, `recclass` denoting its classification, `mass (g)` providing mass specifics, `fall` characterizing the status of descent, `year` signifying the landing date, and `reclat` and `reclong` pinpointing latitude and longitude and precise `geolocation`. Using this data, our main goal is to build an interactive exhibit showing the yearly trends of meteorite falls globally. This aims to vividly depict how these celestial travelers have significantly impacted Earth's history. It also enables a comprehensive comprehension of how these celestial remains are dispersed, their concentration, and their diverse sizes. 

## Approach

In our Shiny app, we've integrated three primary visualizations: a world map, a density map, and a bubble map, each depicting the meteorite landings across various regions over time. These visual representations offer distinct insights into the geographical distribution, concentration density, and mass significance of meteorite impacts. We initiated data exploration to extract relevant information and identify interesting details. The overall plan involves initially preparing and processing the data, followed by creating comprehensive visualizations. These visualizations are then seamlessly integrated into the Shiny app, providing an interactive user experience.

```{r setup, echo=FALSE, warning=FALSE, error=FALSE, message=FALSE, results='hide'}

# GETTING THE LIBRARIES
if (!require("pacman"))
  install.packages("pacman")

pacman::p_load(tidyverse,
               here,
               ggpubr,
               janitor,
               colorspace,
               magick,
               hexbin,
               dplyr,
               sf,
               leaflet,
               ggplot2,
               rnaturalearth,
               dlookr,
               IRdisplay,
               ggmap,
               shiny
)

theme_set(theme_minimal(base_size = 11))

# setting theme for ggplot2
ggplot2::theme_set(ggplot2::theme_minimal(base_size = 14))

# setting width of code output
options(width = 70)

# setting figure parameters for knitr
knitr::opts_chunk$set(
  fig.width = 12,        # 7" width
  fig.asp = 0.618,      # the golden ratio
  fig.retina = 4,       # dpi multiplier for displaying HTML output on retina
  fig.align = "center", # center align figures
  dpi = 500             # higher dpi, sharper image
)

```

```{r read, echo=FALSE, warning=FALSE, error=FALSE, message=FALSE, results='hide'}

meteorite = read_csv("https://raw.githubusercontent.com/INFO526-DataViz/project-final-Data-Dynamos/main/data/Meteorite_Landings.csv")

meteorite
```

In our approach for preparing and processing the data, we first ensured the necessary libraries were loaded using the `pacman` package in R. After importing the data, we began the pre-processing phase. This involved renaming certain columns and eliminating irrelevant columns like 'nametype' and `fall`. Furthermore, we introduced a new column, `decade`, to categorize meteorite landings based on their respective years. This meticulous process aimed to refine the dataset, setting the groundwork for subsequent analysis and visualization steps.

```{r process, echo=FALSE, warning=FALSE, error=FALSE, message=FALSE, results='hide'}

# Rename columns using dplyr::rename
meteorite <- na.omit(meteorite) |>
 clean_names() |>
 rename(mass = mass_g, class= recclass)

meteorite <- subset(meteorite, mass >= 1)

# Drop unnecessary columns
meteorite <- meteorite[, !(names(meteorite) %in% c("nametype", "fall"))]


# Create the 'decade' column
meteorite <- meteorite %>%
  mutate(decade = case_when(
    year < 1950 ~ "Before 1950",
    between(year, 1951, 1960) ~ "Decade 1951-1960",
    between(year, 1961, 1970) ~ "Decade 1961-1970",
    between(year, 1971, 1980) ~ "Decade 1971-1980",
    between(year, 1981, 1990) ~ "Decade 1981-1990",
    between(year, 1991, 2000) ~ "Decade 1991-2000",
    between(year, 2001, 2010) ~ "Decade 2001-2010",
    between(year, 2011, 2020) ~ "Decade 2011-2020",  # Replace 'n' with the appropriate value for the last decade
    TRUE ~ "NA"  # Default case if none of the conditions are met
  ))

```

The `sf` package is employed to showcase the locations of meteorite landings on a global map. It begins by tabulating meteorites on an annual basis. Subsequently, the `ne_countries()` function from the `rnaturalearth` package is employed to construct a world map, specifying the desired scale `normal` and return class. The `geom_sf()` function is then applied to layer this map, visually depicting meteorite impacts with longitude and latitude coordinates.

```{r plot1, echo=FALSE, warning=FALSE, error=FALSE, message=FALSE}

# Count meteorites per year
meteor_count <- table(meteorite$Year)

# Create a world map
world <- ne_countries(scale = "medium", returnclass = "sf")

# Plot meteorite impacts on the map
p1 <- ggplot() +
  geom_sf(data = world, fill = "lightgrey") +
  geom_point(data = meteorite, aes(x = reclong, y = reclat), color = "red", size = 1, alpha = 0.5) +
  labs(title = "World Map: Meteorite Impacts",
       x= "Longiude",
       y= "Latitude") +
  theme_minimal()

# Set custom plot size for R Studio display
knitr::opts_chunk$set(fig.width = 12, fig.height = 8)

# Display the plot
print(p1)

```

Subsequently, we created a thermal density map illustrating the concentration of meteorite impacts across various geographical locations. Using the `ne_countries()` function from the `rnaturalearth` package, we generated a world map with a `medium` scale and specified return class. These maps were then overlaid with density contours formed by the `geom_density_2d()` function, visually depicting the meteorite impact density based on longitude and latitude coordinates.

```{r plot2, echo=FALSE, warning=FALSE, error=FALSE, message=FALSE}

## THERMAL DENSITY MAP## 

# Count meteorites per year
meteor_count <- table(meteorite$year)

# Create a world map
world <- ne_countries(scale = "medium", returnclass = "sf")

# Plot meteorite impacts on the map with density color scale
p2 <- ggplot() +
  geom_sf(data = world, fill = "lightgrey") +
  geom_density_2d(data = meteorite, aes(x = reclong, y = reclat), color= "red") +
  labs(title = "Thermal Map: Meteorite Impacts Density",
       x="Longitude",
       y="Latitude") +
  theme_minimal()

# Display the plot
print(p2)
```

Next, we have constructed a bubble map showcasing meteorite mass distribution across various geographic locations. It integrates a world map as the base layer using `geom_sf()`, and then plots meteorite landings as individual points. Each point's size represents the meteorite's mass, creating a bubble map effect to visualize mass distribution.

```{r plot3, echo=FALSE, warning=FALSE, error=FALSE, message=FALSE}

#####BUBBLE PLOT#####

library(ggplot2)

ggplot() +
  geom_sf(data = world, fill = "lightgrey") +
  geom_point(data = meteorite, aes(x = reclong, y = reclat, size = mass), color = "blue", alpha= 0.5) +
  labs(title = "Bubble Map of Meteorite Mass")
```

```{r plot4, warning=FALSE, message=FALSE}

######HEAT MAP######

library(ggplot2)

ggplot() +
  geom_sf(data = world, fill = "lightgrey") +
  geom_bin2d(data = meteorite, aes(x = reclong, y = reclat, fill = ..count..), bins = 100) +
  scale_fill_viridis_c() +
  labs(title = "Heatmap of Meteorite Impacts")
```

```{r plot5, warning=FALSE, message=FALSE}

######HEXBIN PLOT#####

library(ggplot2)
library(hexbin)

hex_meteorite <- hexbin(meteorite$reclong, meteorite$reclat, xbins = 30)

# Get hexagon data
hex_df <- data.frame(
  x = hex_meteorite@xcm,
  y = hex_meteorite@ycm,
  count = hex_meteorite@count
)

# Create a world map
world <- map_data("world")

# Plot hexbin map with ggplot2
ggplot() +
  geom_polygon(data = world, aes(x = long, y = lat, group = group), fill = "lightgrey") +
  geom_hex(data = hex_df, aes(x = x, y = y, fill = count), stat = "identity") +
  scale_fill_viridis_c() +  # You can choose any color scale you prefer
  geom_point(data = meteorite, aes(x = reclong, y = reclat), color = "red", size = 2, alpha = 0.5) +
  labs(title = "Hexbin Map of Meteorite Impacts") +
  coord_fixed()
```

Finally, the Shiny app integrates user interaction with visual representations to enable a comprehensive exploration of meteorite impacts over different periods and mass ranges. It includes diverse visualizations like World Maps, Density Maps, and Bubble Maps, displaying the geographical spread, size, and density of meteorite impacts. Users have the option to choose specific criteria like year ranges and meteorite mass through sliders. Dropdown menus are integrated to select different map types, allowing the app to dynamically update the visualizations. This provides a comprehensive view of meteorite impacts on a global scale.

```{r shiny_app_render, warning=FALSE, message=FALSE}

#install.packages("shinythemes")
library(shinythemes)

# Load your data
meteorite <- read_csv("https://raw.githubusercontent.com/INFO526-DataViz/project-final-Data-Dynamos/main/data/Meteorite_Landings.csv")

# Clean and Rename columns using dplyr::rename
meteorite <- na.omit(meteorite) |>
  clean_names() |>
  rename(mass = mass_g, class= recclass)

meteorite <- subset(meteorite, mass >= 1)

# Drop unnecessary columns
meteorite <- meteorite[, !(names(meteorite) %in% c("nametype", "fall"))]


# Create the 'decade' column
meteorite <- meteorite %>%
  mutate(decade = case_when(
    year < 1950 ~ "Before 1950",
    between(year, 1951, 1960) ~ "Decade 1951-1960",
    between(year, 1961, 1970) ~ "Decade 1961-1970",
    between(year, 1971, 1980) ~ "Decade 1971-1980",
    between(year, 1981, 1990) ~ "Decade 1981-1990",
    between(year, 1991, 2000) ~ "Decade 1991-2000",
    between(year, 2001, 2010) ~ "Decade 2001-2010",
    between(year, 2011, 2020) ~ "Decade 2011-2020",
    TRUE ~ "NA"
  ))


# UI logic
ui <- fluidPage(
  theme = shinytheme("darkly"),
  titlePanel("Meteorite Impact Visualization"),
  
  sidebarLayout(
    sidebarPanel(
      sliderInput("year_slider", "Select Year:",
                  min = min(meteorite$year),
                  max = max(meteorite$year),
                  value = c(min(meteorite$year), max(meteorite$year)),
                  step = 1),
      
      sliderInput("mass_slider", "Select Mass (g):",
                  min = min(meteorite$mass),
                  max = max(meteorite$mass),
                  value = c(min(meteorite$mass), max(meteorite$mass)),
                  step = 100),
      
      selectInput("plot_type", "Select Visualization:",
                  choices = c("World Map", "Density Map", "Bubble Map", "Heatmap", "Hexbin Map"))
    ),
    
    mainPanel(
      plotOutput("selected_plot")
    )
  )
)

# Server logic
server <- function(input, output) {
  
  # Reactive subset based on year and mass
  filtered_data <- reactive({
    subset(meteorite, year %in% seq(input$year_slider[1], input$year_slider[2]) & mass >= input$mass_slider[1] & mass <= input$mass_slider[2])
  })
  
  # Selected plot
  output$selected_plot <- renderPlot({
    plot_type <- switch(input$plot_type,
                        "World Map" = world_map(filtered_data()),
                        "Density Map" = thermal_map(filtered_data()),
                        "Bubble Map" = bubble_map(filtered_data()),
                        "Heatmap" = heatmap(filtered_data()),
                        "Hexbin Map" = hexbin_map(filtered_data()))
    print(plot_type)
  })
  
  # Helper functions for different plots
  world_map <- function(data) {
    ggplot() +
      geom_sf(data = ne_countries(scale = "medium", returnclass = "sf"), fill = "lightgrey") +
      geom_point(data = data, aes(x = reclong, y = reclat), color = "red", size = 1, alpha = 0.5) +
      labs(title = "World Map : Meteorite Impacts", x = NULL, y = NULL) +
      theme_minimal()
  }
  
  thermal_map <- function(data) {
    ggplot() +
      geom_sf(data = ne_countries(scale = "medium", returnclass = "sf"), fill = "lightgrey") +
      geom_density_2d(data = data, aes(x = reclong, y = reclat), color = "red") +
      labs(title = "Density Map : Meteorite Impacts Density", x = NULL, y = NULL) +
      theme_minimal()
  }
  
  bubble_map <- function(data) {
    ggplot() +
      geom_sf(data = ne_countries(scale = "medium", returnclass = "sf"), fill = "lightgrey") +
      geom_point(data = data, aes(x = reclong, y = reclat, size = mass), color = "blue", alpha = 0.5) +
      labs(title = "Bubble Map : Meteorite Mass", x = NULL, y = NULL)
  }
  
  heatmap <- function(data) {
    ggplot() +
      geom_sf(data = ne_countries(scale = "medium", returnclass = "sf"), fill = "lightgrey") +
      geom_bin2d(data = data, aes(x = reclong, y = reclat, fill = ..count..), bins = 100) +
      scale_fill_viridis_c() +
      labs(title = "Heatmap : Meteorite Impacts", x = NULL, y = NULL)
  }
  
  hexbin_map <- function(data) {
    hex_meteorite <- hexbin(data$reclong, data$reclat, xbins = 30)
    hex_df <- data.frame(
      x = hex_meteorite@xcm,
      y = hex_meteorite@ycm,
      count = hex_meteorite@count
    )
    world <- map_data("world")
    ggplot() +
      geom_polygon(data = world, aes(x = long, y = lat, group = group), fill = "lightgrey") +
      geom_hex(data = hex_df, aes(x = x, y = y, fill = count), stat = "identity") +
      scale_fill_viridis_c() +
      geom_point(data = data, aes(x = reclong, y = reclat), color = "red", size = 2, alpha = 0.5) +
      labs(title = "Hexbin Map : Meteorite Impacts", x = NULL, y = NULL) +
      coord_fixed()
  }
}

# Run the application 
shinyApp(ui = ui, server = server)

```

## Discussion

The Shiny app serves as an interactive platform, empowering users to explore and gain insights into the intricate details of meteorite landings across the globe. It facilitates a comprehensive understanding of the distribution, density, and diverse sizes of these celestial remnants. By providing adjustable parameters and varied visualizations, users can dynamically tailor their explorations. The interactive sliders allow for the specific selection of years or meteorite mass ranges, offering a refined focus for analysis.

Through its visual representations, the app unfolds an array of maps: the World Map, a canvas revealing the precise locations of meteorite landings globally; Density maps, outlining concentration patterns across regions with distinct contour insights; and Bubble maps, where bubble sizes correspond to meteorite masses, offering a visual spectrum for understanding the range of meteorite sizes. These maps serve distinct analytical purposes, enabling users to delve deeper into the fascinating realm of meteorite impacts and uncover nuanced patterns and trends present in these cosmic phenomena.

## Future Scope

Enhancing the app's interactivity might involve directly integrating precise meteorite details into the user interface. Enabling a feature where users can access comprehensive information about individual meteorites by hovering over impact sites would grant access to crucial data like the meteorite's name, formation year, and other relevant attributes. This improvement would elevate the exploration of meteorite impacts, providing a more engaging and informative experience that allows users to explore the specifics of each meteorite seamlessly through the app's interface.
